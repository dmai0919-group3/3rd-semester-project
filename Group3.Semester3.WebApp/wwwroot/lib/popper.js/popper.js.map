{"version":3,"file":"popper.js.map","sources":["../src/popper/utils/isNative.js","../src/popper/utils/debounce.js","../src/popper/utils/isNumeric.js","../src/popper/utils/setStyles.js","../src/popper/utils/isFunction.js","../src/popper/utils/getStyleComputedProperty.js","../src/popper/utils/getParentNode.js","../src/popper/utils/getScrollParent.js","../src/popper/utils/isOffsetContainer.js","../src/popper/utils/getRoot.js","../src/popper/utils/getOffsetParent.js","../src/popper/utils/findCommonOffsetParent.js","../src/popper/utils/getScroll.js","../src/popper/utils/includeScroll.js","../src/popper/utils/getBordersSize.js","../src/popper/utils/isIE10.js","../src/popper/utils/getWindowSizes.js","../src/popper/utils/getClientRect.js","../src/popper/utils/getBoundingClientRect.js","../src/popper/utils/getOffsetRectRelativeToArbitraryNode.js","../src/popper/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/popper/utils/isFixed.js","../src/popper/utils/getBoundaries.js","../src/popper/utils/computeAutoPlacement.js","../src/popper/utils/getReferenceOffsets.js","../src/popper/utils/getOuterSizes.js","../src/popper/utils/getOppositePlacement.js","../src/popper/utils/getPopperOffsets.js","../src/popper/utils/find.js","../src/popper/utils/findIndex.js","../src/popper/utils/runModifiers.js","../src/popper/methods/update.js","../src/popper/utils/isModifierEnabled.js","../src/popper/utils/getSupportedPropertyName.js","../src/popper/methods/destroy.js","../src/popper/utils/setupEventListeners.js","../src/popper/methods/enableEventListeners.js","../src/popper/utils/removeEventListeners.js","../src/popper/methods/disableEventListeners.js","../src/popper/utils/setAttributes.js","../src/popper/modifiers/applyStyle.js","../src/popper/utils/isModifierRequired.js","../src/popper/modifiers/arrow.js","../src/popper/utils/getOppositeVariation.js","../src/popper/methods/placements.js","../src/popper/utils/clockwise.js","../src/popper/modifiers/flip.js","../src/popper/modifiers/keepTogether.js","../src/popper/modifiers/offset.js","../src/popper/modifiers/preventOverflow.js","../src/popper/modifiers/shift.js","../src/popper/modifiers/hide.js","../src/popper/modifiers/inner.js","../src/popper/modifiers/index.js","../src/popper/methods/defaults.js","../src/popper/index.js"],"sourcesContent":["const nativeHints = [\n  'native code',\n  '[object MutationObserverConstructor]', // for mobile safari iOS 9.0\n];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nexport default fn =>\n  nativeHints.some(hint => (fn || '').toString().indexOf(hint) > -1);\n","import isNative from './isNative';\n\nconst isBrowser = typeof window !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let scheduled = false;\n  let i = 0;\n  const elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  const observer = new MutationObserver(() => {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nconst supportsNativeMutationObserver =\n  isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsNativeMutationObserver\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 && isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (\n    !element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1\n  ) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || element.firstElementChild.offsetParent === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  const offsetParent = element && element.offsetParent;\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  return offsetParent;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = window.document.documentElement;\n    const scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    +styles[`border${sideA}Width`].split('px')[0] +\n    +styles[`border${sideB}Width`].split('px')[0]\n  );\n}\n","/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nlet isIE10 = undefined;\n\nexport default function() {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n}\n","import isIE10 from './isIE10';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    isIE10()\n      ? html[`offset${axis}`] +\n          computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`] +\n          computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]\n      : 0\n  );\n}\n\nexport default function getWindowSizes() {\n  const body = window.document.body;\n  const html = window.document.documentElement;\n  const computedStyle = isIE10() && window.getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE10 from './isIE10';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10()) {\n    try {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE10 from './isIE10';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent) {\n  const isIE10 = runIsIE10();\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top,\n    left: childrenRect.left - parentRect.left,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (isHTML || parent.nodeName === 'BODY') {\n    const styles = getStyleComputedProperty(parent);\n    const borderTopWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderTopWidth.split('px')[0];\n    const borderLeftWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderLeftWidth.split('px')[0];\n    const marginTop = isIE10 && isHTML ? 0 : +styles.marginTop.split('px')[0];\n    const marginLeft = isIE10 && isHTML ? 0 : +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  const html = window.document.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = getScroll(html);\n  const scrollLeft = getScroll(html, 'left');\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode\n  from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement\n) {\n  // NOTE: 1 DOM access here\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n  const commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'webkit', 'moz', 'o'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length - 1; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","import getScrollParent from './getScrollParent';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    window.cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data, options) {\n  // apply the final offsets to the popper\n  // NOTE: 1 DOM access here\n  const styles = {\n    position: data.offsets.popper.position,\n  };\n\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // round top and left to avoid blurry text\n  const left = Math.round(data.offsets.popper.left);\n  const top = Math.round(data.offsets.popper.top);\n\n  // if gpuAcceleration is set to true and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n  if (options.gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles.top = 0;\n    styles.left = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `left` and `top` properties\n    styles.left = left;\n    styles.top = top;\n    styles.willChange = 'top, left';\n  }\n\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, { ...styles, ...data.styles });\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, { ...attributes, ...data.attributes });\n\n  // if the arrow style has been computed, apply the arrow style\n  if (data.offsets.arrow) {\n    setStyles(data.arrowElement, data.offsets.arrow);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n  return options;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const popper = getClientRect(data.offsets.popper);\n  const reference = data.offsets.reference;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const side = isVertical ? 'top' : 'left';\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  let sideValue = center - getClientRect(data.offsets.popper)[side];\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = Math.floor(sideValue);\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getClientRect from '../utils/getClientRect';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = getClientRect(data.offsets.popper);\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const popper = getClientRect(data.offsets.popper);\n  const reference = data.offsets.reference;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n      fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n      [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n    ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  const boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement\n  );\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = getClientRect(data.offsets.popper);\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side = ['left', 'top'].indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const reference = data.offsets.reference;\n    const popper = getClientRect(data.offsets.popper);\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const popper = getClientRect(data.offsets.popper);\n  const reference = getClientRect(data.offsets.reference);\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[placement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} priority=['left', 'right', 'top', 'bottom']\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport',\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport setStyles from './utils/setStyles';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport DEFAULTS from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [DEFAULTS](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // make sure to apply the popper position before any computation\n    setStyles(this.popper, { position: 'absolute' });\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({ ...Popper.Defaults.modifiers, ...options.modifiers }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedule an update, it will run on the next UI update available\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * @static\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = DEFAULTS;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"],"names":["nativeHints","fn","some","hint","toString","indexOf","isBrowser","window","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","microtaskDebounce","scheduled","elem","document","createElement","observer","MutationObserver","observe","attributes","setAttribute","taskDebounce","supportsNativeMutationObserver","isNative","isNumeric","n","isNaN","parseFloat","isFinite","setStyles","element","styles","keys","forEach","prop","unit","style","isFunction","functionToCheck","getType","call","getStyleComputedProperty","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","overflow","overflowX","overflowY","test","isOffsetContainer","firstElementChild","offsetParent","getRoot","node","getOffsetParent","documentElement","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","axis","sideA","sideB","split","isIE10","undefined","appVersion","getSize","computedStyle","Math","max","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","err","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","runIsIE10","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","innerWidth","innerHeight","offset","isFixed","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","Object","map","key","sort","a","b","area","filteredAreas","filter","computedPlacement","variation","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","findIndex","value","cur","match","obj","runModifiers","modifiers","data","ends","modifiersToRun","slice","function","warn","enabled","update","isDestroyed","options","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","destroy","removeAttribute","disableEventListeners","removeOnDestroy","removeChild","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","setAttributes","applyStyle","round","prefixedProperty","gpuAcceleration","willChange","instance","arrow","arrowElement","applyStyleOnLoad","modifierOptions","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","querySelector","isVertical","len","altSide","opSide","arrowElementSize","center","sideValue","min","floor","getOppositeVariation","validPlacements","placements","clockwise","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","priority","escapeWithReference","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","Popper","requestAnimationFrame","debounce","bind","Defaults","jquery","onLoad","Utils","global","PopperUtils","DEFAULTS"],"mappings":"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"}