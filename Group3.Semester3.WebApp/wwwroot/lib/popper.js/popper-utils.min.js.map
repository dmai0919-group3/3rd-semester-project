{"version":3,"file":"popper-utils.js.map","sources":["../src/popper/utils/getStyleComputedProperty.js","../src/popper/utils/getParentNode.js","../src/popper/utils/getScrollParent.js","../src/popper/utils/isOffsetContainer.js","../src/popper/utils/getRoot.js","../src/popper/utils/getOffsetParent.js","../src/popper/utils/findCommonOffsetParent.js","../src/popper/utils/getScroll.js","../src/popper/utils/includeScroll.js","../src/popper/utils/getBordersSize.js","../src/popper/utils/isIE10.js","../src/popper/utils/getWindowSizes.js","../src/popper/utils/getClientRect.js","../src/popper/utils/getBoundingClientRect.js","../src/popper/utils/getOffsetRectRelativeToArbitraryNode.js","../src/popper/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/popper/utils/isFixed.js","../src/popper/utils/getBoundaries.js","../src/popper/utils/computeAutoPlacement.js","../src/popper/utils/isNative.js","../src/popper/utils/debounce.js","../src/popper/utils/find.js","../src/popper/utils/findIndex.js","../src/popper/utils/getOffsetRect.js","../src/popper/utils/getOuterSizes.js","../src/popper/utils/getOppositePlacement.js","../src/popper/utils/getPopperOffsets.js","../src/popper/utils/getReferenceOffsets.js","../src/popper/utils/getSupportedPropertyName.js","../src/popper/utils/isFunction.js","../src/popper/utils/isModifierEnabled.js","../src/popper/utils/isModifierRequired.js","../src/popper/utils/isNumeric.js","../src/popper/utils/removeEventListeners.js","../src/popper/utils/runModifiers.js","../src/popper/utils/setAttributes.js","../src/popper/utils/setStyles.js","../src/popper/utils/setupEventListeners.js","../src/popper/utils/index.js"],"sourcesContent":["/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (\n    !element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1\n  ) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || element.firstElementChild.offsetParent === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  const offsetParent = element && element.offsetParent;\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  return offsetParent;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = window.document.documentElement;\n    const scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    +styles[`border${sideA}Width`].split('px')[0] +\n    +styles[`border${sideB}Width`].split('px')[0]\n  );\n}\n","/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nlet isIE10 = undefined;\n\nexport default function() {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n}\n","import isIE10 from './isIE10';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    isIE10()\n      ? html[`offset${axis}`] +\n          computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`] +\n          computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]\n      : 0\n  );\n}\n\nexport default function getWindowSizes() {\n  const body = window.document.body;\n  const html = window.document.documentElement;\n  const computedStyle = isIE10() && window.getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE10 from './isIE10';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10()) {\n    try {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE10 from './isIE10';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent) {\n  const isIE10 = runIsIE10();\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top,\n    left: childrenRect.left - parentRect.left,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (isHTML || parent.nodeName === 'BODY') {\n    const styles = getStyleComputedProperty(parent);\n    const borderTopWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderTopWidth.split('px')[0];\n    const borderLeftWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderLeftWidth.split('px')[0];\n    const marginTop = isIE10 && isHTML ? 0 : +styles.marginTop.split('px')[0];\n    const marginLeft = isIE10 && isHTML ? 0 : +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  const html = window.document.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = getScroll(html);\n  const scrollLeft = getScroll(html, 'left');\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode\n  from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement\n) {\n  // NOTE: 1 DOM access here\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","const nativeHints = [\n  'native code',\n  '[object MutationObserverConstructor]', // for mobile safari iOS 9.0\n];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nexport default fn =>\n  nativeHints.some(hint => (fn || '').toString().indexOf(hint) > -1);\n","import isNative from './isNative';\n\nconst isBrowser = typeof window !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let scheduled = false;\n  let i = 0;\n  const elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  const observer = new MutationObserver(() => {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nconst supportsNativeMutationObserver =\n  isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsNativeMutationObserver\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import getWindowSizes from './getWindowSizes';\nimport getClientRect from './getClientRect';\n\n/**\n * Get the position of the given element, relative to its offset parent\n * @method\n * @memberof Popper.Utils\n * @param {Element} element\n * @return {Object} position - Coordinates of the element and its `scrollTop`\n */\nexport default function getOffsetRect(element) {\n  let elementRect;\n  if (element.nodeName === 'HTML') {\n    const { width, height } = getWindowSizes();\n    elementRect = {\n      width,\n      height,\n      left: 0,\n      top: 0,\n    };\n  } else {\n    elementRect = {\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n      left: element.offsetLeft,\n      top: element.offsetTop,\n    };\n  }\n\n  // position\n  return getClientRect(elementRect);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n  const commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'webkit', 'moz', 'o'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length - 1; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 && isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import getScrollParent from './getScrollParent';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import computeAutoPlacement from './computeAutoPlacement';\nimport debounce from './debounce';\nimport findIndex from './findIndex';\nimport getBordersSize from './getBordersSize';\nimport getBoundaries from './getBoundaries';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getClientRect from './getClientRect';\nimport getOffsetParent from './getOffsetParent';\nimport getOffsetRect from './getOffsetRect';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getOuterSizes from './getOuterSizes';\nimport getParentNode from './getParentNode';\nimport getPopperOffsets from './getPopperOffsets';\nimport getReferenceOffsets from './getReferenceOffsets';\nimport getScroll from './getScroll';\nimport getScrollParent from './getScrollParent';\nimport getStyleComputedProperty from './getStyleComputedProperty';\nimport getSupportedPropertyName from './getSupportedPropertyName';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport isFunction from './isFunction';\nimport isModifierEnabled from './isModifierEnabled';\nimport isModifierRequired from './isModifierRequired';\nimport isNative from './isNative';\nimport isNumeric from './isNumeric';\nimport removeEventListeners from './removeEventListeners';\nimport runModifiers from './runModifiers';\nimport setAttributes from './setAttributes';\nimport setStyles from './setStyles';\nimport setupEventListeners from './setupEventListeners';\n\n/** @namespace Popper.Utils */\nexport default {\n  computeAutoPlacement,\n  debounce,\n  findIndex,\n  getBordersSize,\n  getBoundaries,\n  getBoundingClientRect,\n  getClientRect,\n  getOffsetParent,\n  getOffsetRect,\n  getOffsetRectRelativeToArbitraryNode,\n  getOuterSizes,\n  getParentNode,\n  getPopperOffsets,\n  getReferenceOffsets,\n  getScroll,\n  getScrollParent,\n  getStyleComputedProperty,\n  getSupportedPropertyName,\n  getWindowSizes,\n  isFixed,\n  isFunction,\n  isModifierEnabled,\n  isModifierRequired,\n  isNative,\n  isNumeric,\n  removeEventListeners,\n  runModifiers,\n  setAttributes,\n  setStyles,\n  setupEventListeners,\n};\n"],"names":["getStyleComputedProperty","element","property","nodeType","css","window","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","indexOf","document","body","overflow","overflowX","overflowY","test","isOffsetContainer","firstElementChild","offsetParent","getRoot","node","getOffsetParent","documentElement","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","split","isIE10","undefined","navigator","appVersion","getSize","computedStyle","Math","max","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","err","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","runIsIE10","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","innerWidth","innerHeight","offset","isFixed","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","Object","keys","map","key","sort","a","b","area","filteredAreas","filter","computedPlacement","length","variation","nativeHints","fn","some","hint","toString","isBrowser","longerTimeoutBrowsers","timeoutDuration","i","userAgent","microtaskDebounce","scheduled","elem","createElement","observer","MutationObserver","observe","attributes","setAttribute","taskDebounce","supportsNativeMutationObserver","isNative","find","arr","check","Array","prototype","findIndex","prop","value","cur","match","obj","getOffsetRect","elementRect","offsetLeft","offsetTop","getOuterSizes","x","parseFloat","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","getReferenceOffsets","state","commonOffsetParent","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","slice","prefix","toCheck","style","isFunction","functionToCheck","getType","call","isModifierEnabled","modifiers","modifierName","name","enabled","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","warn","isNumeric","n","isNaN","isFinite","removeEventListeners","removeEventListener","updateBound","scrollParents","forEach","target","scrollElement","eventsEnabled","runModifiers","data","ends","modifiersToRun","function","setAttributes","removeAttribute","setStyles","unit","attachToScrollParents","event","callback","isBody","addEventListener","passive","push","setupEventListeners","options"],"mappings":"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"}