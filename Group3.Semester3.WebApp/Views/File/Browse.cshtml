@using Microsoft.CodeAnalysis

@{
    ViewData["Title"] = "OGO Filesharing - Browse files";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row" id="file-container">
    
</div>


<script>

    $(function () {
        browseDirectoryFiles("0");

        $.contextMenu({
            selector: '.file',
            items: {
                rename: {
                    name: "Rename",
                    callback: function (key, opt) {
                        showRenameFileModal(key, opt);
                    }
                },
                delete: {
                    name: "Delete",
                    callback: function (key, opt) {
                        // TODO: Show confirm modal first in the future
                        showDeleteFileModal(key, opt);
                    }
                }
            }
        });
        $.contextMenu({
            selector: '#file-container',
            items: {
                createFolder: {
                    name: "Create folder",
                    callback: function (key, opt) {
                        showCreateFolderModal();
                    }
                },
                uploadFile: {
                    name: "Upload file",
                    callback: function (key, opt) {
                        showUploadFileModal();
                    }
                }
            }
        });
    });

    function showRenameFileModal(key, opt) {

        let $element = opt.$trigger;
        let fileId = $element.attr("id");

        let fileName = $element.find('.file-name').text();

        $("#file-name").val(fileName);
        $("#file-id").val(fileId);

        $("#renameFileModal").modal();

    }

    function renameFile() {
         let fileName = $("#file-name").val();
         let fileId = $("#file-id").val();

         let url = "@Url.Action("Rename", "FileApi")";

         let file = {
             Id: fileId,
             Name: fileName
         }

         $.ajax({
            url: url,
            data: JSON.stringify(file),
            type: "PUT",
            contentType: "application/json",
            success: function(result){
                let id = result.id;
                let fileName = result.name;

                $("#renameFileModal").modal("hide");

                let $fileNameElement = $('#'+id).find('.file-name');

                $fileNameElement.text(fileName);
            },
            error: function (result) {
                // TODO: Handle better in the future
                alert("Failed to rename a file");
            }
         });

    }

    function showDeleteFileModal(key, opt) {

        let $element = opt.$trigger;
        let fileId = $element.attr("id");

        $("#delete-file-id").val(fileId);

        $("#deleteFileModal").modal();

    }

    function deleteFile() {

        let fileId = $("#delete-file-id").val();

        let url = "@Url.Action("Delete", "FileApi")";

        let data = {
            Id: fileId
        }

         $.ajax({
            url: url,
            data: JSON.stringify(data),
            type: "DELETE",
            contentType: "application/json",
            success: function(result){

                $("#deleteFileModal").modal("hide");
                $('#' + fileId).remove();
            },
            error: function (result) {
                // TODO: Handle better in the future
                alert("Failed to delete a file");
            }
         });

        // TODO: Implement delete logic
    }

    function browseDirectoryFiles(parentId) {

        let url = "/api/file/browse/" + parentId;

        $.ajax({
            url: url,
            type: "GET",
            success: function (result) {
                changeFiles(result);
            },
            error: function (result) {
                // TODO: Handle better in the future
                alert("Failed to load files");
            }
        })
    }

    const fileMarkup = `
                <div class="col-md-2 {{classes}} justify-content-center" id="{{fileId}}">
                    <div>
                        <img src="{{icon}}" />
                    </div>
                    <p class="file-name">{{fileName}}</p>
                </div>
            `;

    function changeFiles(result) {
        let $fileContainer = $('#file-container');

        $fileContainer.empty();

        result.forEach(file => {
            let markup = fileMarkup;

            markup = markup.replaceAll("{{fileId}}", file.id);
            markup = markup.replaceAll("{{fileName}}", file.name);

            if (file.isfolder) {
                markup = markup.replaceAll("{{classes}}", "file folder");
                markup = markup.replaceAll("{{icon}}", "/@Url.Content("Images/folder-icon.png")");
            } else {
                markup = markup.replaceAll("{{classes}}", "file");
                markup = markup.replaceAll("{{icon}}", "/@Url.Content("Images/file-icon.png")");
            }

            $fileContainer.append(markup);
        });
    }

    function showCreateFolderModal() {
        $("#createFolderModal").modal();

    }

    function createFolder() {
        console.log("create-folder");
        // TODO: Implement delete logic
    }

    function showUploadFileModal() {
        $("#uploadFileModal").modal();

    }
</script>


<div class="modal fade" id="renameFileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Rename file</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="file-name" class="col-form-label">File name:</label>
                        <input type="text" class="form-control" id="file-name">
                    </div>
                    <div class="form-group">
                        <input type="hidden" id="file-id">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="renameFile()">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteFileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete file</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <label for="question" class="col-form-label">Are you sure you want to delete the selected file?</label>
                    <div class="form-group">
                        <input type="hidden" id="delete-file-id">
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="deleteFile()">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="uploadFileModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Upload file</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Html.Raw(ViewBag.Result)
                <form enctype="multipart/form-data" method="post">
                    <div class="form-group">
                        <input type="file" name="files" class="form-control-file" multiple />
                    </div>
                    <div class="form-group">
                        <input type="text" name="parentGuid" class="form-control" value="0" />
                        <label for="parentGuid">Parent GUID</label>
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-info"> Upload </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createFolderModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create folder</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="folder-name" class="col-form-label">Folder name:</label>
                        <input type="text" class="form-control" id="folder-name">
                    </div>
                    <div class="form-group">
                        <input type="hidden" id="folder-id">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="createFolder()">Create</button>
            </div>
        </div>
    </div>
</div>

<div class="dropdown" x-placement="bottom-start" style="position: absolute; top: 20px; right: 400px; will-change: transform;">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        New
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        <a class="dropdown-item" href="#" onclick="showUploadFileModal()">File</a>
        <a class="dropdown-item" href="#" onclick="showCreateFolderModal()">Folder</a>
    </div>
</div>